<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		creationComplete="on_creation_complete(event)" xmlns:local="*"		 
>
<fx:Script>
<![CDATA[
	import controls.DataGridEx;
	
	import mx.collections.ArrayCollection;
	import mx.events.CloseEvent;
	import mx.events.FlexEvent;
	import mx.events.ValidationResultEvent;
	
	import spark.components.DataGrid;

[Bindable] protected var dg:DataGridEx = null;


	
	
	

protected function on_creation_complete(event:FlexEvent):void
{
	wnd.item = new Employee();
	wnd.inp_FirstName.setFocus();

}

public function set_dg(dg:DataGridEx):void
{
	this.dg = dg;
	
	if (dg.selectedIndex < 0) {
		dg.selectedIndex = 0;
	}
	
	update();
}
	
	
override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
{
//	lbl_width = Math.max(lbl_FirstName.width, lbl_LastName.width, lbl_Dept.width, lbl_Position.width );
	super.updateDisplayList(unscaledWidth, unscaledHeight);

}








	
protected function up_click(event:MouseEvent):void
{
	var len:int = (dg.dataProvider as ArrayCollection).length - 1;
	
	if (dg.selectedIndex > 0) 
		dg.selectedIndex--;
	else 
		dg.selectedIndex = len;
	
	dg.scrollToIndex(dg.selectedIndex);
}

protected function dn_click(event:MouseEvent):void
{
	var len:int = (dg.dataProvider as ArrayCollection).length - 1;
	
	if (dg.selectedIndex <  len) 
		dg.selectedIndex++;
	else 
		dg.selectedIndex = 0;
	
	dg.scrollToIndex(dg.selectedIndex);

}

protected function update(p:* = null):Boolean
{
	wnd.item = dg.selectedItem as Employee;	
	return true;
}

public function change_item(item:Employee, fn:String, old_value:*):void
{
	if (wnd.item.DeptID < 0) wnd.item.DeptID = 0;
	
	if (fn == 'DeptID' && (wnd.item.DeptID == int(old_value))) return;
	
	Engine.engine.update_employee_field(wnd.item, fn, old_value);
}

private function handleValid(e:ValidationResultEvent):void
{
	
}

	
]]>
</fx:Script>
<mx:HBox backgroundColor="#A0AAA0" width="100%" paddingTop="8" paddingBottom="8" paddingLeft="8" paddingRight="8" verticalAlign="middle" horizontalGap="10">
	<s:Image source="@Embed(source='./assets/data_edit_48.png')" />
	<s:VGroup gap="10" width="100%">
		<s:Label text="{wnd.item.FirstName} {wnd.item.LastName}" fontWeight="bold" fontSize="18" width="100%" lineBreak="explicit"/>
		<s:Label text="{wnd.item.Position}"  fontSize="14" color="#404040" width="100%" lineBreak="explicit"/>
	</s:VGroup>
</mx:HBox>

	
	
<local:EmployeeWindow id="wnd" width="100%" height="100%" change_item="{change_item}" />	

<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle">
	<s:Label text="ID: {wnd.item.EmplID}" />
	<s:Spacer width="100%" />
	<s:Button id="up" label="▲"  fontSize="8" maxWidth="48" click="up_click(event)" enabled="{(dg.dataProvider as ArrayCollection).length != 0}" />
	<s:Button id="dn" label="▼"  fontSize="8" maxWidth="48" click="dn_click(event)" enabled="{up.enabled}"/>	
	<s:Spacer width="16" />
	<s:Button label="Закрыть" click="{dispatchEvent(new CloseEvent(CloseEvent.CLOSE, true))}" />
</s:HGroup>
	
	
<fx:Declarations>
<fx:Boolean>{update(dg.selectedIndex)}</fx:Boolean>

	<mx:Validator id="reqValid1" required="true" source="{wnd.inp_FirstName}" property="text" 
				  valid="handleValid(event)" invalid="handleValid(event);" requiredFieldError="Поле [ИМЯ] не может быть пустым" />
	
	<mx:Validator id="reqValid2" required="true" source="{wnd.inp_LastName}" property="text" 
				  valid="handleValid(event)" invalid="handleValid(event);" 	requiredFieldError="Поле [ФАМИЛИЯ] не может быть пустым"/>

</fx:Declarations>
</mx:VBox>
