<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		creationComplete="on_creation_complete(event)"		 
>
<fx:Script>
<![CDATA[
	import mx.collections.ArrayCollection;
	import mx.events.CloseEvent;
	import mx.events.FlexEvent;
	import mx.utils.StringUtil;
	
	import spark.events.IndexChangeEvent;
	import spark.events.TextOperationEvent;

[Bindable] public var item:Employee;
[Bindable] private var dep_dp:ArrayCollection;

	
	
	

protected function on_creation_complete(event:FlexEvent):void
{
	item = new Employee();
	dep_dp = Engine.engine.departments_ac;	
	inp_FirstName.setFocus();
}


override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
{
//	lbl_width = Math.max(lbl_FirstName.width, lbl_LastName.width, lbl_Dept.width, lbl_Position.width );
	super.updateDisplayList(unscaledWidth, unscaledHeight);

}


protected function get_lbl_width(v:*):Number
{
	return Math.max(lbl_FirstName.width, lbl_LastName.width, lbl_Dept.width, lbl_Position.width );	
}




protected function get_dept_index(id:int):int
{
	if (item == null) return -1;
	
	var engine:Engine = Engine.engine
	
	var i:* = engine.departments_index[id];
	return i != null ? int(i) : -1;
}
	
	
protected function inp_Dept_change():void
{
	if (item != null) {
		var old_value:int = item.DeptID; 
		item.DeptID = inp_Dept.selectedIndex >= 0 ? (dep_dp.getItemAt(inp_Dept.selectedIndex) as Department).DeptID : -1;
		change_item(item, "DeptID", old_value);
	}
}

protected var changer:String = null; 
	
protected function foc_in(e:FocusEvent):void
{
	var ti:TextInput = (e.currentTarget as TextInput);
	var fn:String = ti.id.substring(4);
	var text:String = StringUtil.trim(ti.text);
	
	changer = text;
	
}

	
protected function foc_out(e:FocusEvent):void
{
	var ti:TextInput = (e.currentTarget as TextInput);
	var fn:String = ti.id.substring(4);
	var text:String = StringUtil.trim(ti.text);

	cre_change(fn);
	changer = null;
}
	
protected function cre_change(fn:String):void
{
	var ti:TextInput = this['inp_' + fn]
	var text:String = StringUtil.trim(ti.text);
	
	if (item == null) return;
	
	
	if (text == "" && (fn == "FirstName" || fn == "LastName")) {
		item[fn] = changer;
		return;
	}
	
	item[fn] = text;
	change_item(item, fn, changer);
	changer = text;
}
	
	
public var change_item:Function = function():void {}
	
protected function inp_change(e:TextOperationEvent):void
{
	var ti:TextInput = (e.currentTarget as TextInput);
	var fn:String = ti.id.substring(4);
	var text:String = StringUtil.trim(ti.text);

	if (item != null) {
		item[fn] = text;
	}
}
	
protected function dept_out(event:FocusEvent):void
{
	if (item != null) {
//		change_item(item.EmplID, "DeptID", item.DeptID);
	}
}
	
	
protected function inp_key_down(e:KeyboardEvent):void
{
	var ti:TextInput = (e.currentTarget as TextInput);
	var fn:String = ti.id.substring(4);
	if (item == null) return;
	
	switch (e.keyCode) {
		case Keyboard.ESCAPE:
			item[fn] = changer;
			return;
		case Keyboard.ENTER:
			cre_change(fn);
			return;
			
	}
}
	
]]>
</fx:Script>
<mx:VBox width="100%" height="100%" paddingLeft="8" paddingRight="8" paddingTop="16" paddingBottom="16" 
		 backgroundColor="#F0F0F0" borderStyle="solid" borderColor="#000000" verticalGap="8" >
	

<s:HGroup width="100%" verticalAlign="middle">
	<s:Label id="lbl_FirstName" text="Имя:"  minWidth="{Math.max(lbl_FirstName.width, lbl_LastName.width, lbl_Dept.width, lbl_Position.width )}" enabled="{item != null}" />
	<s:TextInput id="inp_FirstName" text="{item.FirstName}" width="100%" maxChars="128" enabled="{item != null}" 
				 change="inp_change(event)" focusIn="foc_in(event)" focusOut="foc_out(event)" keyDown="inp_key_down(event)" />	
	<s:Image id="del_FirstName" source="{Icons._delete}" width="24" click="{inp_FirstName.text = ''; if (item != null) item.FirstName = ''}"  enabled="{item != null}" />
</s:HGroup>

<s:HGroup width="100%" verticalAlign="middle">
	<s:Label id="lbl_LastName" text="Фамилия:"  minWidth="{Math.max(lbl_FirstName.width, lbl_LastName.width, lbl_Dept.width, lbl_Position.width )}" enabled="{item != null}" />
	<s:TextInput id="inp_LastName" text="{item.LastName}" width="100%" maxChars="128" enabled="{item != null}" 
				 change="inp_change(event)" focusIn="foc_in(event)" focusOut="foc_out(event)" keyDown="inp_key_down(event)"/>	
	<s:Image id="del_LastName" source="{Icons._delete}" width="24" click="{inp_LastName.text = ''; if (item != null) item.LastName = ''}" enabled="{item != null}" />
</s:HGroup>

<s:HGroup width="100%" verticalAlign="middle">
	<s:Label id="lbl_Dept" text="Отделение:"  minWidth="{Math.max(lbl_FirstName.width, lbl_LastName.width, lbl_Dept.width, lbl_Position.width )}" enabled="{item != null}"/>
	<s:DropDownList id="inp_Dept" dataProvider="{dep_dp}" width="100%" labelField="DeptName" focusOut="dept_out(event)" selectedIndex="{item != null ? get_dept_index(item.DeptID) : -1}" change="{inp_Dept_change()}" enabled="{item != null}"/>
	<s:Image id="del_Dept" source="{Icons._delete}" width="24" click="{inp_Dept.selectedIndex = -1; inp_Dept_change()}" enabled="{item != null}"  />
</s:HGroup>
	
<s:HGroup width="100%" verticalAlign="middle">
	<s:Label id="lbl_Position" text="Должность:" minWidth="{Math.max(lbl_FirstName.width, lbl_LastName.width, lbl_Dept.width, lbl_Position.width )}" enabled="{item != null}" />
	<s:TextInput id="inp_Position" text="{item.Position}" width="100%" maxChars="128" enabled="{item != null}" 
				 change="inp_change(event)" focusIn="foc_in(event)" focusOut="foc_out(event)" keyDown="inp_key_down(event)"/>	
	<s:Image id="del_Position" source="{Icons._delete}" width="24" click="{inp_Position.text = ''; if (item != null) item.Position = '' }" enabled="{item != null}" />
</s:HGroup>
	
	
</mx:VBox>	

	
	
<fx:Declarations>

</fx:Declarations>
</mx:VBox>
